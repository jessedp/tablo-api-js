var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/Device.html",[0,0.584,1,0.584]],["body/interfaces/Device.html",[0,0.501,1,0.709,2,0.967,3,0.784,4,0.784,5,0.632,6,1.503,7,0.501,8,1.109,9,2.68,10,2.68,11,3.408,12,2.68,13,2.251,14,3.51,15,3.51,16,3.51,17,1.725,18,2.133,19,3.51,20,3.51,21,1.725,22,3.51,23,3.51,24,3.51,25,2.68,26,1.821,27,1.401,28,0.082,29,1.693,30,0.784,31,0.632,32,0.784,33,3.229,34,2.784,35,3.229,36,1.503,37,0.036,38,0.051,39,0.036]],["title/classes/Discover.html",[40,0.914,41,0.914]],["body/classes/Discover.html",[1,0.899,3,0.793,4,0.502,5,0.404,7,0.507,8,0.793,9,0.962,10,0.962,12,0.962,13,2.068,18,0.766,21,0.619,25,2.334,26,1.118,27,0.981,28,0.084,29,1.118,30,0.793,31,0.901,32,1.406,37,0.023,38,0.036,39,0.023,40,0.502,41,0.984,42,0.766,43,0.766,44,2.947,45,3.633,46,2.47,47,2.47,48,2.47,49,2.47,50,1.521,51,3.25,52,2.481,53,2.84,54,1.501,55,1.992,56,2.481,57,1.26,58,1.992,59,1.26,60,1.992,61,1.26,62,2.47,63,1.26,64,1.26,65,2.807,66,1.521,67,2.599,68,1.992,69,1.521,70,2.143,71,1.26,72,1.992,73,0.793,74,1.992,75,2.481,76,1.26,77,0.793,78,1.992,79,1.26,80,2.068,81,0.984,82,1.26,83,1.26,84,2.207,85,0.962,86,1.521,87,1.992,88,1.26,89,2.947,90,2.47,91,1.992,92,2.807,93,1.26,94,1.26,95,1.26,96,1.26,97,1.26,98,1.26,99,1.26,100,1.26,101,1.26,102,1.26,103,1.26,104,2.47,105,1.26,106,1.26,107,1.26,108,1.26,109,1.26,110,0.962,111,1.992,112,2.47,113,1.26,114,1.992,115,1.26,116,1.26,117,1.26,118,0.962,119,1.26,120,1.26,121,1.26,122,1.26,123,1.26,124,1.26,125,1.26,126,1.26,127,1.26,128,3.25,129,1.992,130,1.992,131,1.992,132,1.26,133,0.766,134,1.992,135,1.992,136,1.26,137,1.26,138,1.26,139,1.26,140,0.962,141,1.26,142,1.26,143,1.26,144,1.26,145,1.26,146,1.26,147,1.26,148,1.26,149,1.992,150,1.26,151,1.26,152,1.26,153,1.26,154,1.26,155,1.118,156,1.26,157,1.26,158,1.992,159,1.26,160,1.26,161,1.26,162,1.26,163,0.962,164,1.521,165,0.962,166,0.962,167,1.26,168,1.26,169,0.962,170,1.26,171,1.26,172,1.26,173,1.992,174,1.26,175,1.26,176,0.766,177,0.962,178,1.26,179,1.26,180,0.962]],["title/interfaces/Model.html",[0,0.584,181,1.127]],["body/interfaces/Model.html",[0,0.864,1,1.008,2,1.295,3,1.05,4,1.05,5,0.846,7,0.671,8,1.35,17,2.011,21,1.295,26,1.807,27,1.4,28,0.08,29,1.576,30,1.35,31,0.846,37,0.048,38,0.062,39,0.048,181,1.944,182,1.601,183,3.021,184,3.021,185,3.021,186,0.846,187,2.012,188,2.012,189,2.012,190,2.012,191,2.012,192,2.012,193,2.012,194,2.012]],["title/interfaces/ServerInfo.html",[0,0.584,186,0.736]],["body/interfaces/ServerInfo.html",[0,0.799,1,0.596,2,1.15,3,0.932,4,0.932,5,0.751,7,0.596,8,1.249,17,1.935,21,1.856,26,1.823,27,1.404,28,0.081,29,1.505,30,1.249,31,0.751,37,0.043,38,0.057,39,0.043,181,2.068,182,1.422,183,1.787,184,1.787,185,2.884,186,1.007,187,2.884,188,2.884,189,2.884,190,2.884,191,2.884,192,2.884,193,2.884,194,2.884]],["title/classes/Tablo.html",[40,0.914,73,0.914]],["body/classes/Tablo.html",[1,0.953,3,1.015,4,0.356,5,0.287,7,0.227,8,0.599,11,2.243,13,0.913,17,1.443,26,1.49,27,1.095,28,0.084,29,0.91,30,0.599,31,0.733,32,0.91,36,0.682,37,0.016,38,0.027,39,0.016,40,0.356,41,0.91,42,0.542,44,2.925,50,1.148,52,3.127,53,1.148,54,1.183,56,2.722,66,1.148,67,2.722,69,2.772,70,2.355,73,1.359,75,1.946,77,0.775,80,1.678,81,0.775,84,2.167,86,1.148,89,1.946,110,0.682,118,1.743,133,1.388,155,0.91,163,1.486,164,1.486,165,2.243,166,0.682,169,2.243,176,1.388,177,1.946,180,0.682,186,0.625,195,0.542,196,1.947,197,1.946,198,2.284,199,1.503,200,1.503,201,1.503,202,2.284,203,1.503,204,2.284,205,1.503,206,0.893,207,0.893,208,0.893,209,0.893,210,3.21,211,1.503,212,2.284,213,0.893,214,3.317,215,2.762,216,2.548,217,1.503,218,0.893,219,1.503,220,3.085,221,0.893,222,1.503,223,1.503,224,1.503,225,1.503,226,1.503,227,0.893,228,2.284,229,1.503,230,1.503,231,1.503,232,0.893,233,1.503,234,1.743,235,1.503,236,3.317,237,1.743,238,2.284,239,2.284,240,2.284,241,2.284,242,1.503,243,1.503,244,1.503,245,0.893,246,0.893,247,1.503,248,1.503,249,0.893,250,0.893,251,1.503,252,1.503,253,1.503,254,1.503,255,2.284,256,0.893,257,0.893,258,0.682,259,0.682,260,2.548,261,0.893,262,0.893,263,1.503,264,1.503,265,0.893,266,0.893,267,0.893,268,0.893,269,0.893,270,0.893,271,0.893,272,1.947,273,0.893,274,0.893,275,1.503,276,1.503,277,0.893,278,0.893,279,0.893,280,2.284,281,0.893,282,2.937,283,0.893,284,2.284,285,2.548,286,2.762,287,1.503,288,0.893,289,1.503,290,0.893,291,1.947,292,1.947,293,0.893,294,0.893,295,0.893,296,1.503,297,0.893,298,0.893,299,0.893,300,0.893,301,0.893,302,0.893,303,1.503,304,0.893,305,0.682,306,1.503,307,0.893,308,0.893,309,0.893,310,0.893,311,0.893,312,1.503,313,1.503,314,0.893]],["title/coverage.html",[315,2.362]],["body/coverage.html",[0,0.988,1,0.723,5,0.912,6,2.168,27,0.912,28,0.081,32,1.131,37,0.052,38,0.065,39,0.052,40,1.416,41,1.131,43,2.358,73,1.131,77,1.131,81,1.416,133,2.634,155,1.131,181,1.395,182,2.16,186,0.912,195,2.358,305,2.168,315,2.168,316,2.168,317,2.84,318,2.84,319,2.84,320,2.84,321,2.84,322,2.84,323,2.84,324,4.067,325,4.067,326,2.84,327,2.84,328,2.84]],["title/dependencies.html",[329,1.476,330,2.098]],["body/dependencies.html",[28,0.081,37,0.06,38,0.071,39,0.06,77,1.324,80,2.019,81,1.324,330,2.537,331,3.323,332,3.323,333,3.323,334,3.323,335,3.323,336,3.323,337,3.323,338,3.323,339,3.323]],["title/index.html",[7,0.492,340,1.476,341,1.476]],["body/index.html",[18,1.507,28,0.079,37,0.045,38,0.059,39,0.045,73,1.673,84,2.44,140,1.893,155,0.988,186,0.796,197,1.893,234,1.893,329,1.893,342,4.015,343,2.479,344,2.479,345,2.479,346,2.479,347,2.479,348,2.479,349,2.479,350,2.479,351,2.479,352,2.479,353,2.479,354,2.479,355,3.258,356,4.015,357,2.479,358,4.015,359,2.479,360,2.479,361,2.479,362,2.479,363,2.479,364,2.479,365,2.479,366,2.479,367,2.479,368,3.258,369,2.479,370,2.479,371,2.479,372,3.258,373,2.479,374,2.479,375,2.479,376,2.479,377,1.893,378,2.479,379,2.479,380,2.479,381,2.479,382,2.479,383,2.479,384,3.639,385,3.639,386,2.479,387,2.479,388,2.479,389,2.479,390,2.479,391,2.479,392,2.479,393,3.258,394,2.479,395,2.479,396,2.479,397,2.479,398,2.479,399,2.479,400,2.479,401,2.479,402,1.893]],["title/license.html",[340,1.476,341,1.476,403,1.476]],["body/license.html",[28,0.061,37,0.047,38,0.061,39,0.047,176,2.04,237,1.982,316,1.982,377,1.982,402,1.982,403,1.982,404,3.722,405,2.596,406,2.596,407,2.596,408,3.358,409,2.596,410,2.596,411,2.596,412,2.596,413,2.596,414,2.596,415,3.358,416,4.35,417,2.596,418,2.596,419,3.722,420,2.596,421,3.358,422,2.596,423,2.596,424,2.596,425,2.596,426,2.596,427,2.596,428,2.596,429,2.596,430,2.596,431,3.358,432,2.596,433,2.596,434,2.596,435,2.596,436,2.596,437,2.596,438,2.596,439,3.358,440,3.358,441,2.596,442,2.596,443,2.596,444,2.596,445,2.596,446,2.596,447,2.596,448,2.596,449,2.596,450,2.596,451,2.596,452,2.596,453,2.596,454,2.596,455,2.596,456,2.596,457,2.596,458,2.596,459,2.596,460,2.596,461,2.596,462,2.596,463,2.596,464,2.596,465,2.596,466,2.596,467,2.596,468,2.596,469,2.596,470,2.596]],["title/modules.html",[471,2.362]],["body/modules.html",[28,0.074,37,0.064,38,0.074,39,0.064,471,2.711]],["title/overview.html",[472,2.362]],["body/overview.html",[2,1.717,28,0.073,37,0.063,38,0.073,39,0.063,42,2.123,472,2.668,473,3.495,474,3.495]],["title/miscellaneous/variables.html",[475,1.476,476,2.098]],["body/miscellaneous/variables.html",[7,0.798,28,0.079,31,1.351,32,1.504,37,0.057,38,0.069,39,0.057,41,1.248,43,1.904,54,2.557,77,1.504,81,1.676,85,2.392,155,1.248,195,1.904,258,2.392,259,2.392,475,2.392,476,2.392,477,3.776,478,3.776]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":133,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{},"coverage.html":{}}}],["0.19.2",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["1)[0",{"_index":126,"title":{},"body":{"classes/Discover.html":{}}}],["100",{"_index":131,"title":{},"body":{"classes/Discover.html":{}}}],["120",{"_index":134,"title":{},"body":{"classes/Discover.html":{}}}],["130",{"_index":135,"title":{},"body":{"classes/Discover.html":{}}}],["140",{"_index":112,"title":{},"body":{"classes/Discover.html":{}}}],["16.0.3",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["192.168.1.100",{"_index":365,"title":{},"body":{"index.html":{}}}],["2",{"_index":473,"title":{},"body":{"overview.html":{}}}],["2/7",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":406,"title":{},"body":{"license.html":{}}}],["250",{"_index":149,"title":{},"body":{"classes/Discover.html":{}}}],["255.255.255.255",{"_index":101,"title":{},"body":{"classes/Discover.html":{}}}],["28",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":474,"title":{},"body":{"overview.html":{}}}],["3.3.2",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":129,"title":{},"body":{"classes/Discover.html":{}}}],["4.1.1",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":305,"title":{},"body":{"classes/Tablo.html":{},"coverage.html":{}}}],["68",{"_index":130,"title":{},"body":{"classes/Discover.html":{}}}],["7/14",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["8881",{"_index":60,"title":{},"body":{"classes/Discover.html":{}}}],["8882",{"_index":58,"title":{},"body":{"classes/Discover.html":{}}}],["above",{"_index":438,"title":{},"body":{"license.html":{}}}],["action",{"_index":463,"title":{},"body":{"license.html":{}}}],["add",{"_index":359,"title":{},"body":{"index.html":{}}}],["aid",{"_index":374,"title":{},"body":{"index.html":{}}}],["airings",{"_index":240,"title":{},"body":{"classes/Tablo.html":{}}}],["airingscache",{"_index":196,"title":{},"body":{"classes/Tablo.html":{}}}],["and/or",{"_index":429,"title":{},"body":{"license.html":{}}}],["api",{"_index":342,"title":{},"body":{"index.html":{}}}],["api.device",{"_index":364,"title":{},"body":{"index.html":{}}}],["api.discover",{"_index":363,"title":{},"body":{"index.html":{}}}],["api.get('/recordings/airings",{"_index":367,"title":{},"body":{"index.html":{}}}],["api.getserverinfo",{"_index":366,"title":{},"body":{"index.html":{}}}],["apior",{"_index":357,"title":{},"body":{"index.html":{}}}],["apiusage",{"_index":360,"title":{},"body":{"index.html":{}}}],["arg0",{"_index":211,"title":{},"body":{"classes/Tablo.html":{}}}],["arising",{"_index":467,"title":{},"body":{"license.html":{}}}],["arr",{"_index":173,"title":{},"body":{"classes/Discover.html":{}}}],["arr[index",{"_index":174,"title":{},"body":{"classes/Discover.html":{}}}],["arr[index].via",{"_index":175,"title":{},"body":{"classes/Discover.html":{}}}],["associated",{"_index":417,"title":{},"body":{"license.html":{}}}],["async",{"_index":52,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["attempt",{"_index":65,"title":{},"body":{"classes/Discover.html":{}}}],["authors",{"_index":457,"title":{},"body":{"license.html":{}}}],["availability",{"_index":192,"title":{},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}}}],["await",{"_index":169,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["axios",{"_index":77,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["axios.create",{"_index":259,"title":{},"body":{"classes/Tablo.html":{},"miscellaneous/variables.html":{}}}],["axios.delete(url",{"_index":293,"title":{},"body":{"classes/Tablo.html":{}}}],["axios.get(this.discoveryurl",{"_index":170,"title":{},"body":{"classes/Discover.html":{}}}],["axios.get(url",{"_index":294,"title":{},"body":{"classes/Tablo.html":{}}}],["axios.post(url",{"_index":314,"title":{},"body":{"classes/Tablo.html":{}}}],["batch",{"_index":198,"title":{},"body":{"classes/Tablo.html":{}}}],["batch(data",{"_index":209,"title":{},"body":{"classes/Tablo.html":{}}}],["batch(data:string",{"_index":300,"title":{},"body":{"classes/Tablo.html":{}}}],["board",{"_index":9,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{}}}],["bool",{"_index":34,"title":{},"body":{"interfaces/Device.html":{}}}],["boolean",{"_index":185,"title":{},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}}}],["broadcast",{"_index":53,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["browser",{"_index":351,"title":{},"body":{"index.html":{}}}],["buffer.from('bngr",{"_index":100,"title":{},"body":{"classes/Discover.html":{}}}],["build",{"_index":375,"title":{},"body":{"index.html":{}}}],["build_number",{"_index":191,"title":{},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}}}],["buildlinter",{"_index":387,"title":{},"body":{"index.html":{}}}],["buildor",{"_index":386,"title":{},"body":{"index.html":{}}}],["built",{"_index":372,"title":{},"body":{"index.html":{}}}],["byte",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["bytes",{"_index":78,"title":{},"body":{"classes/Discover.html":{}}}],["c",{"_index":405,"title":{},"body":{"license.html":{}}}],["cache_key",{"_index":193,"title":{},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}}}],["cached",{"_index":239,"title":{},"body":{"classes/Tablo.html":{}}}],["catch",{"_index":177,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["charge",{"_index":412,"title":{},"body":{"license.html":{}}}],["check",{"_index":253,"title":{},"body":{"classes/Tablo.html":{}}}],["checked",{"_index":194,"title":{},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}}}],["checks",{"_index":391,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":302,"title":{},"body":{"classes/Tablo.html":{}}}],["claim",{"_index":460,"title":{},"body":{"license.html":{}}}],["class",{"_index":40,"title":{"classes/Discover.html":{},"classes/Tablo.html":{}},"body":{"classes/Discover.html":{},"classes/Tablo.html":{},"coverage.html":{}}}],["classes",{"_index":42,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{},"overview.html":{}}}],["clean",{"_index":394,"title":{},"body":{"index.html":{}}}],["cleartimeout(this.watcher",{"_index":91,"title":{},"body":{"classes/Discover.html":{}}}],["client",{"_index":97,"title":{},"body":{"classes/Discover.html":{}}}],["client.bind(this.sendport",{"_index":98,"title":{},"body":{"classes/Discover.html":{}}}],["client.close",{"_index":107,"title":{},"body":{"classes/Discover.html":{}}}],["client.send(data",{"_index":102,"title":{},"body":{"classes/Discover.html":{}}}],["client.setbroadcast(true",{"_index":99,"title":{},"body":{"classes/Discover.html":{}}}],["cloned",{"_index":370,"title":{},"body":{"index.html":{}}}],["close",{"_index":159,"title":{},"body":{"classes/Discover.html":{}}}],["code",{"_index":393,"title":{},"body":{"index.html":{}}}],["commands",{"_index":373,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":437,"title":{},"body":{"license.html":{}}}],["connection",{"_index":469,"title":{},"body":{"license.html":{}}}],["consistency",{"_index":399,"title":{},"body":{"index.html":{}}}],["const",{"_index":84,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{},"index.html":{}}}],["contract",{"_index":464,"title":{},"body":{"license.html":{}}}],["copies",{"_index":431,"title":{},"body":{"license.html":{}}}],["copy",{"_index":415,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":404,"title":{},"body":{"license.html":{}}}],["core",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":241,"title":{},"body":{"classes/Tablo.html":{}}}],["coverage",{"_index":315,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpes",{"_index":167,"title":{},"body":{"classes/Discover.html":{}}}],["damages",{"_index":461,"title":{},"body":{"license.html":{}}}],["data",{"_index":80,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{},"dependencies.html":{}}}],["data.foreach((part",{"_index":172,"title":{},"body":{"classes/Discover.html":{}}}],["date",{"_index":35,"title":{},"body":{"interfaces/Device.html":{}}}],["deal",{"_index":418,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":470,"title":{},"body":{"license.html":{}}}],["debug",{"_index":81,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["debug('bcast",{"_index":90,"title":{},"body":{"classes/Discover.html":{}}}],["debug('broadcast",{"_index":158,"title":{},"body":{"classes/Discover.html":{}}}],["debug('discover.broadcast",{"_index":266,"title":{},"body":{"classes/Tablo.html":{}}}],["debug('discover.http",{"_index":262,"title":{},"body":{"classes/Tablo.html":{}}}],["debug('discovery",{"_index":85,"title":{},"body":{"classes/Discover.html":{},"miscellaneous/variables.html":{}}}],["debug('http",{"_index":178,"title":{},"body":{"classes/Discover.html":{}}}],["debug('index",{"_index":258,"title":{},"body":{"classes/Tablo.html":{},"miscellaneous/variables.html":{}}}],["debug('server.on.message",{"_index":136,"title":{},"body":{"classes/Discover.html":{}}}],["debug(`unk",{"_index":113,"title":{},"body":{"classes/Discover.html":{}}}],["debug(device",{"_index":137,"title":{},"body":{"classes/Discover.html":{}}}],["debug(discoverdata",{"_index":263,"title":{},"body":{"classes/Tablo.html":{}}}],["debug(msg",{"_index":117,"title":{},"body":{"classes/Discover.html":{}}}],["debug(outerdevice",{"_index":160,"title":{},"body":{"classes/Discover.html":{}}}],["default",{"_index":31,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":56,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["delete",{"_index":199,"title":{},"body":{"classes/Tablo.html":{}}}],["delete(path",{"_index":217,"title":{},"body":{"classes/Tablo.html":{}}}],["deletes",{"_index":219,"title":{},"body":{"classes/Tablo.html":{}}}],["dependencies",{"_index":330,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":235,"title":{},"body":{"classes/Tablo.html":{}}}],["dev_type",{"_index":10,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{}}}],["developed",{"_index":348,"title":{},"body":{"index.html":{}}}],["development",{"_index":368,"title":{},"body":{"index.html":{}}}],["device",{"_index":1,"title":{"interfaces/Device.html":{}},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{},"coverage.html":{}}}],["device:device",{"_index":127,"title":{},"body":{"classes/Discover.html":{}}}],["devices",{"_index":197,"title":{},"body":{"classes/Tablo.html":{},"index.html":{}}}],["dgram",{"_index":82,"title":{},"body":{"classes/Discover.html":{}}}],["dgram.createsocket('udp4",{"_index":87,"title":{},"body":{"classes/Discover.html":{}}}],["discover",{"_index":41,"title":{"classes/Discover.html":{}},"body":{"classes/Discover.html":{},"classes/Tablo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["discoverdata",{"_index":260,"title":{},"body":{"classes/Tablo.html":{}}}],["discovery",{"_index":32,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"classes/Tablo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["discovery.broadcast",{"_index":265,"title":{},"body":{"classes/Tablo.html":{}}}],["discovery.http",{"_index":261,"title":{},"body":{"classes/Tablo.html":{}}}],["discoveryurl",{"_index":46,"title":{},"body":{"classes/Discover.html":{}}}],["dist",{"_index":378,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":427,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":316,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dvrs",{"_index":347,"title":{},"body":{"index.html":{}}}],["easily",{"_index":150,"title":{},"body":{"classes/Discover.html":{}}}],["end",{"_index":381,"title":{},"body":{"index.html":{}}}],["err",{"_index":284,"title":{},"body":{"classes/Tablo.html":{}}}],["error",{"_index":89,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["error(`http",{"_index":179,"title":{},"body":{"classes/Discover.html":{}}}],["error(msg",{"_index":281,"title":{},"body":{"classes/Tablo.html":{}}}],["eslint",{"_index":142,"title":{},"body":{"classes/Discover.html":{}}}],["event",{"_index":456,"title":{},"body":{"license.html":{}}}],["export",{"_index":30,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{}}}],["express",{"_index":447,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":223,"title":{},"body":{"classes/Tablo.html":{}}}],["false",{"_index":118,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["feel",{"_index":138,"title":{},"body":{"classes/Discover.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{},"coverage.html":{}}}],["files",{"_index":377,"title":{},"body":{"index.html":{},"license.html":{}}}],["find",{"_index":224,"title":{},"body":{"classes/Tablo.html":{}}}],["fitness",{"_index":452,"title":{},"body":{"license.html":{}}}],["flight",{"_index":252,"title":{},"body":{"classes/Tablo.html":{}}}],["following",{"_index":436,"title":{},"body":{"license.html":{}}}],["force",{"_index":236,"title":{},"body":{"classes/Tablo.html":{}}}],["format",{"_index":120,"title":{},"body":{"classes/Discover.html":{}}}],["formatlicence",{"_index":401,"title":{},"body":{"index.html":{}}}],["formator",{"_index":400,"title":{},"body":{"index.html":{}}}],["formats",{"_index":397,"title":{},"body":{"index.html":{}}}],["free",{"_index":411,"title":{},"body":{"license.html":{}}}],["function",{"_index":216,"title":{},"body":{"classes/Tablo.html":{}}}],["furnished",{"_index":434,"title":{},"body":{"license.html":{}}}],["get(path",{"_index":226,"title":{},"body":{"classes/Tablo.html":{}}}],["getrecordings",{"_index":200,"title":{},"body":{"classes/Tablo.html":{}}}],["getrecordings(force",{"_index":230,"title":{},"body":{"classes/Tablo.html":{}}}],["getrecordingscount",{"_index":201,"title":{},"body":{"classes/Tablo.html":{}}}],["getrecordingscount(force",{"_index":244,"title":{},"body":{"classes/Tablo.html":{}}}],["getserverinfo",{"_index":202,"title":{},"body":{"classes/Tablo.html":{}}}],["getting",{"_index":340,"title":{"index.html":{},"license.html":{}},"body":{}}],["geturl",{"_index":203,"title":{},"body":{"classes/Tablo.html":{}}}],["geturl(path",{"_index":248,"title":{},"body":{"classes/Tablo.html":{}}}],["granted",{"_index":410,"title":{},"body":{"license.html":{}}}],["grosser",{"_index":151,"title":{},"body":{"classes/Discover.html":{}}}],["hereby",{"_index":409,"title":{},"body":{"license.html":{}}}],["holders",{"_index":458,"title":{},"body":{"license.html":{}}}],["host",{"_index":12,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{}}}],["http",{"_index":13,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"classes/Tablo.html":{}}}],["http://${this.device.private_ip}:8885/${newpath",{"_index":299,"title":{},"body":{"classes/Tablo.html":{}}}],["https://api.tablotv.com/assocserver/getipinfo",{"_index":55,"title":{},"body":{"classes/Discover.html":{}}}],["identifier",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":303,"title":{},"body":{"classes/Tablo.html":{}}}],["implied",{"_index":448,"title":{},"body":{"license.html":{}}}],["import",{"_index":75,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["included",{"_index":441,"title":{},"body":{"license.html":{}}}],["including",{"_index":421,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{}}}],["info.address}:${info.port",{"_index":116,"title":{},"body":{"classes/Discover.html":{}}}],["inserted",{"_index":14,"title":{},"body":{"interfaces/Device.html":{}}}],["install",{"_index":355,"title":{},"body":{"index.html":{}}}],["installation",{"_index":354,"title":{},"body":{"index.html":{}}}],["interact",{"_index":346,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Device.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}},"body":{"interfaces/Device.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Device.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"overview.html":{}}}],["isready",{"_index":204,"title":{},"body":{"classes/Tablo.html":{}}}],["jessedp",{"_index":407,"title":{},"body":{"license.html":{}}}],["js",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":392,"title":{},"body":{"index.html":{}}}],["kind",{"_index":446,"title":{},"body":{"license.html":{}}}],["lastseen",{"_index":15,"title":{},"body":{"interfaces/Device.html":{}}}],["liability",{"_index":462,"title":{},"body":{"license.html":{}}}],["liable",{"_index":459,"title":{},"body":{"license.html":{}}}],["license",{"_index":403,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":422,"title":{},"body":{"license.html":{}}}],["limited",{"_index":449,"title":{},"body":{"license.html":{}}}],["lint",{"_index":390,"title":{},"body":{"index.html":{}}}],["lintformatter",{"_index":396,"title":{},"body":{"index.html":{}}}],["lintor",{"_index":395,"title":{},"body":{"index.html":{}}}],["listening",{"_index":95,"title":{},"body":{"classes/Discover.html":{}}}],["local",{"_index":225,"title":{},"body":{"classes/Tablo.html":{}}}],["local_address",{"_index":189,"title":{},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}}}],["looks",{"_index":154,"title":{},"body":{"classes/Discover.html":{}}}],["matching",{"_index":38,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":451,"title":{},"body":{"license.html":{}}}],["merge",{"_index":425,"title":{},"body":{"license.html":{}}}],["methods",{"_index":50,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["miscellaneous",{"_index":475,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":402,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":181,"title":{"interfaces/Model.html":{}},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"coverage.html":{}}}],["modified",{"_index":16,"title":{},"body":{"interfaces/Device.html":{}}}],["modify",{"_index":424,"title":{},"body":{"license.html":{}}}],["module",{"_index":345,"title":{},"body":{"index.html":{}}}],["modules",{"_index":471,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":152,"title":{},"body":{"classes/Discover.html":{}}}],["msg",{"_index":110,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["msg.length",{"_index":111,"title":{},"body":{"classes/Discover.html":{}}}],["name",{"_index":17,"title":{},"body":{"interfaces/Device.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{}}}],["new",{"_index":155,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newpath",{"_index":297,"title":{},"body":{"classes/Tablo.html":{}}}],["nicety",{"_index":268,"title":{},"body":{"classes/Tablo.html":{}}}],["node",{"_index":361,"title":{},"body":{"index.html":{}}}],["node/electron",{"_index":350,"title":{},"body":{"index.html":{}}}],["nodejs.timeout",{"_index":76,"title":{},"body":{"classes/Discover.html":{}}}],["noninfringement",{"_index":455,"title":{},"body":{"license.html":{}}}],["notice",{"_index":439,"title":{},"body":{"license.html":{}}}],["npm",{"_index":356,"title":{},"body":{"index.html":{}}}],["null",{"_index":289,"title":{},"body":{"classes/Tablo.html":{}}}],["num",{"_index":231,"title":{},"body":{"classes/Tablo.html":{}}}],["number",{"_index":29,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{}}}],["object.keys(discoverdata).length",{"_index":264,"title":{},"body":{"classes/Tablo.html":{}}}],["obtaining",{"_index":414,"title":{},"body":{"license.html":{}}}],["once",{"_index":94,"title":{},"body":{"classes/Discover.html":{}}}],["ones",{"_index":379,"title":{},"body":{"index.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/Device.html":{},"classes/Tablo.html":{}}}],["otherwise",{"_index":466,"title":{},"body":{"license.html":{}}}],["out",{"_index":468,"title":{},"body":{"license.html":{}}}],["outerdevice",{"_index":141,"title":{},"body":{"classes/Discover.html":{}}}],["outerdevice:device",{"_index":108,"title":{},"body":{"classes/Discover.html":{}}}],["outputs",{"_index":376,"title":{},"body":{"index.html":{}}}],["overview",{"_index":472,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pacakage",{"_index":383,"title":{},"body":{"index.html":{}}}],["package",{"_index":329,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["packet",{"_index":96,"title":{},"body":{"classes/Discover.html":{}}}],["param",{"_index":285,"title":{},"body":{"classes/Tablo.html":{}}}],["parameters",{"_index":214,"title":{},"body":{"classes/Tablo.html":{}}}],["particular",{"_index":453,"title":{},"body":{"license.html":{}}}],["path",{"_index":220,"title":{},"body":{"classes/Tablo.html":{}}}],["path.replace",{"_index":298,"title":{},"body":{"classes/Tablo.html":{}}}],["permission",{"_index":408,"title":{},"body":{"license.html":{}}}],["permit",{"_index":432,"title":{},"body":{"license.html":{}}}],["person",{"_index":413,"title":{},"body":{"license.html":{}}}],["persons",{"_index":433,"title":{},"body":{"license.html":{}}}],["place",{"_index":398,"title":{},"body":{"index.html":{}}}],["port",{"_index":33,"title":{},"body":{"interfaces/Device.html":{}}}],["portions",{"_index":443,"title":{},"body":{"license.html":{}}}],["post",{"_index":205,"title":{},"body":{"classes/Tablo.html":{}}}],["post(path",{"_index":254,"title":{},"body":{"classes/Tablo.html":{}}}],["pre",{"_index":251,"title":{},"body":{"classes/Tablo.html":{}}}],["private",{"_index":44,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["private_ip",{"_index":18,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"index.html":{}}}],["probably",{"_index":36,"title":{},"body":{"interfaces/Device.html":{},"classes/Tablo.html":{}}}],["processed",{"_index":243,"title":{},"body":{"classes/Tablo.html":{}}}],["progresscallback",{"_index":210,"title":{},"body":{"classes/Tablo.html":{}}}],["progresscallback(recs.length",{"_index":309,"title":{},"body":{"classes/Tablo.html":{}}}],["promise",{"_index":70,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["promise((resolve",{"_index":156,"title":{},"body":{"classes/Discover.html":{}}}],["promise(async",{"_index":162,"title":{},"body":{"classes/Discover.html":{}}}],["proper",{"_index":119,"title":{},"body":{"classes/Discover.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{}}}],["provided",{"_index":444,"title":{},"body":{"license.html":{}}}],["provides",{"_index":343,"title":{},"body":{"index.html":{}}}],["public",{"_index":51,"title":{},"body":{"classes/Discover.html":{}}}],["public_ip",{"_index":19,"title":{},"body":{"interfaces/Device.html":{}}}],["publish",{"_index":426,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":454,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":45,"title":{},"body":{"classes/Discover.html":{}}}],["receive",{"_index":228,"title":{},"body":{"classes/Tablo.html":{}}}],["received",{"_index":114,"title":{},"body":{"classes/Discover.html":{}}}],["recordings",{"_index":234,"title":{},"body":{"classes/Tablo.html":{},"index.html":{}}}],["records",{"_index":242,"title":{},"body":{"classes/Tablo.html":{}}}],["recs",{"_index":306,"title":{},"body":{"classes/Tablo.html":{}}}],["recs.concat(values",{"_index":308,"title":{},"body":{"classes/Tablo.html":{}}}],["recvport",{"_index":47,"title":{},"body":{"classes/Discover.html":{}}}],["reject",{"_index":164,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["reject(error",{"_index":296,"title":{},"body":{"classes/Tablo.html":{}}}],["reloading",{"_index":238,"title":{},"body":{"classes/Tablo.html":{}}}],["remove",{"_index":270,"title":{},"body":{"classes/Tablo.html":{}}}],["repo",{"_index":371,"title":{},"body":{"index.html":{}}}],["reported",{"_index":247,"title":{},"body":{"classes/Tablo.html":{}}}],["request",{"_index":105,"title":{},"body":{"classes/Discover.html":{}}}],["require('byte",{"_index":79,"title":{},"body":{"classes/Discover.html":{}}}],["require('dgram",{"_index":83,"title":{},"body":{"classes/Discover.html":{}}}],["require('tablo",{"_index":362,"title":{},"body":{"index.html":{}}}],["required",{"_index":115,"title":{},"body":{"classes/Discover.html":{}}}],["resolve",{"_index":163,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["resolve([outerdevice",{"_index":161,"title":{},"body":{"classes/Discover.html":{}}}],["resolve(data",{"_index":180,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["resolve(recs",{"_index":310,"title":{},"body":{"classes/Tablo.html":{}}}],["resolve(response.data",{"_index":295,"title":{},"body":{"classes/Tablo.html":{}}}],["resp_code",{"_index":132,"title":{},"body":{"classes/Discover.html":{}}}],["response",{"_index":166,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["response.data.cpes",{"_index":171,"title":{},"body":{"classes/Discover.html":{}}}],["response:response",{"_index":168,"title":{},"body":{"classes/Discover.html":{}}}],["restriction",{"_index":420,"title":{},"body":{"license.html":{}}}],["result",{"_index":37,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":39,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":233,"title":{},"body":{"classes/Tablo.html":{}}}],["return",{"_index":67,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["returned",{"_index":313,"title":{},"body":{"classes/Tablo.html":{}}}],["returned[el",{"_index":307,"title":{},"body":{"classes/Tablo.html":{}}}],["returns",{"_index":69,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["rights",{"_index":423,"title":{},"body":{"license.html":{}}}],["roku",{"_index":20,"title":{},"body":{"interfaces/Device.html":{}}}],["run",{"_index":384,"title":{},"body":{"index.html":{}}}],["runs",{"_index":388,"title":{},"body":{"index.html":{}}}],["s",{"_index":104,"title":{},"body":{"classes/Discover.html":{}}}],["script",{"_index":385,"title":{},"body":{"index.html":{}}}],["selected",{"_index":275,"title":{},"body":{"classes/Tablo.html":{}}}],["sell",{"_index":430,"title":{},"body":{"license.html":{}}}],["sendport",{"_index":48,"title":{},"body":{"classes/Discover.html":{}}}],["sent",{"_index":106,"title":{},"body":{"classes/Discover.html":{}}}],["server",{"_index":86,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["server.bind(this.recvport",{"_index":146,"title":{},"body":{"classes/Discover.html":{}}}],["server.close",{"_index":92,"title":{},"body":{"classes/Discover.html":{}}}],["server.on('close",{"_index":157,"title":{},"body":{"classes/Discover.html":{}}}],["server.on('error",{"_index":88,"title":{},"body":{"classes/Discover.html":{}}}],["server.on('listening",{"_index":93,"title":{},"body":{"classes/Discover.html":{}}}],["server.on('message",{"_index":109,"title":{},"body":{"classes/Discover.html":{}}}],["server_id",{"_index":21,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}}}],["server_version",{"_index":22,"title":{},"body":{"interfaces/Device.html":{}}}],["serverinfo",{"_index":186,"title":{"interfaces/ServerInfo.html":{}},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{},"coverage.html":{},"index.html":{}}}],["service",{"_index":74,"title":{},"body":{"classes/Discover.html":{}}}],["settimeout",{"_index":148,"title":{},"body":{"classes/Discover.html":{}}}],["setup_completed",{"_index":190,"title":{},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}}}],["shall",{"_index":440,"title":{},"body":{"license.html":{}}}],["shouldn't",{"_index":139,"title":{},"body":{"classes/Discover.html":{}}}],["simple",{"_index":344,"title":{},"body":{"index.html":{}}}],["single",{"_index":68,"title":{},"body":{"classes/Discover.html":{}}}],["size",{"_index":304,"title":{},"body":{"classes/Tablo.html":{}}}],["slip",{"_index":23,"title":{},"body":{"interfaces/Device.html":{}}}],["software",{"_index":416,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{}}}],["specified",{"_index":229,"title":{},"body":{"classes/Tablo.html":{}}}],["src/.../discovery.ts",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/device.ts",{"_index":6,"title":{},"body":{"interfaces/Device.html":{},"coverage.html":{}}}],["src/discovery.ts",{"_index":43,"title":{},"body":{"classes/Discover.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/discovery.ts:101",{"_index":71,"title":{},"body":{"classes/Discover.html":{}}}],["src/discovery.ts:13",{"_index":61,"title":{},"body":{"classes/Discover.html":{}}}],["src/discovery.ts:14",{"_index":59,"title":{},"body":{"classes/Discover.html":{}}}],["src/discovery.ts:15",{"_index":57,"title":{},"body":{"classes/Discover.html":{}}}],["src/discovery.ts:16",{"_index":63,"title":{},"body":{"classes/Discover.html":{}}}],["src/discovery.ts:21",{"_index":64,"title":{},"body":{"classes/Discover.html":{}}}],["src/index.ts",{"_index":195,"title":{},"body":{"classes/Tablo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/index.ts:115",{"_index":218,"title":{},"body":{"classes/Tablo.html":{}}}],["src/index.ts:125",{"_index":227,"title":{},"body":{"classes/Tablo.html":{}}}],["src/index.ts:13",{"_index":208,"title":{},"body":{"classes/Tablo.html":{}}}],["src/index.ts:138",{"_index":249,"title":{},"body":{"classes/Tablo.html":{}}}],["src/index.ts:14",{"_index":206,"title":{},"body":{"classes/Tablo.html":{}}}],["src/index.ts:143",{"_index":213,"title":{},"body":{"classes/Tablo.html":{}}}],["src/index.ts:15",{"_index":207,"title":{},"body":{"classes/Tablo.html":{}}}],["src/index.ts:177",{"_index":256,"title":{},"body":{"classes/Tablo.html":{}}}],["src/index.ts:20",{"_index":221,"title":{},"body":{"classes/Tablo.html":{}}}],["src/index.ts:49",{"_index":250,"title":{},"body":{"classes/Tablo.html":{}}}],["src/index.ts:59",{"_index":246,"title":{},"body":{"classes/Tablo.html":{}}}],["src/index.ts:74",{"_index":245,"title":{},"body":{"classes/Tablo.html":{}}}],["src/index.ts:95",{"_index":232,"title":{},"body":{"classes/Tablo.html":{}}}],["src/serverinfo.ts",{"_index":182,"title":{},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"coverage.html":{}}}],["ssl",{"_index":24,"title":{},"body":{"interfaces/Device.html":{}}}],["standard",{"_index":389,"title":{},"body":{"index.html":{}}}],["started",{"_index":341,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["strarray",{"_index":255,"title":{},"body":{"classes/Tablo.html":{}}}],["strarray?:string",{"_index":311,"title":{},"body":{"classes/Tablo.html":{}}}],["string",{"_index":26,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{}}}],["struct('>4s64s32s20s10s10s",{"_index":121,"title":{},"body":{"classes/Discover.html":{}}}],["struct.format('b').unpack",{"_index":122,"title":{},"body":{"classes/Discover.html":{}}}],["structjs",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["subject",{"_index":435,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":428,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":442,"title":{},"body":{"license.html":{}}}],["t",{"_index":215,"title":{},"body":{"classes/Tablo.html":{}}}],["table",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["tablo",{"_index":73,"title":{"classes/Tablo.html":{}},"body":{"classes/Discover.html":{},"classes/Tablo.html":{},"coverage.html":{},"index.html":{}}}],["tabloapi",{"_index":279,"title":{},"body":{"classes/Tablo.html":{}}}],["testing",{"_index":269,"title":{},"body":{"classes/Tablo.html":{}}}],["this.airingscache",{"_index":286,"title":{},"body":{"classes/Tablo.html":{}}}],["this.airingscache.length",{"_index":288,"title":{},"body":{"classes/Tablo.html":{}}}],["this.batch(this.airingscache",{"_index":290,"title":{},"body":{"classes/Tablo.html":{}}}],["this.device",{"_index":272,"title":{},"body":{"classes/Tablo.html":{}}}],["this.device.private_ip",{"_index":278,"title":{},"body":{"classes/Tablo.html":{}}}],["this.devices",{"_index":271,"title":{},"body":{"classes/Tablo.html":{}}}],["this.devices[0",{"_index":273,"title":{},"body":{"classes/Tablo.html":{}}}],["this.get('/recordings/airings",{"_index":287,"title":{},"body":{"classes/Tablo.html":{}}}],["this.get('/server/info",{"_index":283,"title":{},"body":{"classes/Tablo.html":{}}}],["this.geturl(path",{"_index":292,"title":{},"body":{"classes/Tablo.html":{}}}],["this.isready",{"_index":282,"title":{},"body":{"classes/Tablo.html":{}}}],["this.sendport",{"_index":103,"title":{},"body":{"classes/Discover.html":{}}}],["this.watcher",{"_index":147,"title":{},"body":{"classes/Discover.html":{}}}],["though",{"_index":352,"title":{},"body":{"index.html":{}}}],["throw",{"_index":280,"title":{},"body":{"classes/Tablo.html":{}}}],["throws",{"_index":274,"title":{},"body":{"classes/Tablo.html":{}}}],["timeout",{"_index":62,"title":{},"body":{"classes/Discover.html":{}}}],["timezone",{"_index":187,"title":{},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}}}],["todo",{"_index":267,"title":{},"body":{"classes/Tablo.html":{}}}],["topost",{"_index":312,"title":{},"body":{"classes/Tablo.html":{}}}],["tort",{"_index":465,"title":{},"body":{"license.html":{}}}],["trunc",{"_index":123,"title":{},"body":{"classes/Discover.html":{}}}],["trunc(bytes.unpackstring(msg",{"_index":128,"title":{},"body":{"classes/Discover.html":{}}}],["try",{"_index":165,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["tuners",{"_index":183,"title":{},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}}}],["txt",{"_index":124,"title":{},"body":{"classes/Discover.html":{}}}],["txt.split('\\0",{"_index":125,"title":{},"body":{"classes/Discover.html":{}}}],["type",{"_index":27,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{},"interfaces/Model.html":{},"interfaces/ServerInfo.html":{},"classes/Tablo.html":{},"coverage.html":{}}}],["typeof",{"_index":276,"title":{},"body":{"classes/Tablo.html":{}}}],["udp",{"_index":66,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{}}}],["ultimately",{"_index":380,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":277,"title":{},"body":{"classes/Tablo.html":{}}}],["up",{"_index":382,"title":{},"body":{"index.html":{}}}],["url",{"_index":291,"title":{},"body":{"classes/Tablo.html":{}}}],["use",{"_index":176,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{},"license.html":{}}}],["used",{"_index":349,"title":{},"body":{"index.html":{}}}],["using",{"_index":72,"title":{},"body":{"classes/Discover.html":{}}}],["utilizes",{"_index":222,"title":{},"body":{"classes/Tablo.html":{}}}],["value",{"_index":54,"title":{},"body":{"classes/Discover.html":{},"classes/Tablo.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":476,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":188,"title":{},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}}}],["via",{"_index":25,"title":{},"body":{"interfaces/Device.html":{},"classes/Discover.html":{}}}],["void",{"_index":212,"title":{},"body":{"classes/Tablo.html":{}}}],["void):promise",{"_index":301,"title":{},"body":{"classes/Tablo.html":{}}}],["wanted",{"_index":143,"title":{},"body":{"classes/Discover.html":{}}}],["warranties",{"_index":450,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":445,"title":{},"body":{"license.html":{}}}],["watcher",{"_index":49,"title":{},"body":{"classes/Discover.html":{}}}],["whether",{"_index":237,"title":{},"body":{"classes/Tablo.html":{},"license.html":{}}}],["wifi",{"_index":184,"title":{},"body":{"interfaces/Model.html":{},"interfaces/ServerInfo.html":{}}}],["without",{"_index":419,"title":{},"body":{"license.html":{}}}],["work",{"_index":140,"title":{},"body":{"classes/Discover.html":{},"index.html":{}}}],["works",{"_index":144,"title":{},"body":{"classes/Discover.html":{}}}],["wrong",{"_index":145,"title":{},"body":{"classes/Discover.html":{}}}],["wronger",{"_index":153,"title":{},"body":{"classes/Discover.html":{}}}],["yarn",{"_index":358,"title":{},"body":{"index.html":{}}}],["yes",{"_index":257,"title":{},"body":{"classes/Tablo.html":{}}}],["ymmv",{"_index":353,"title":{},"body":{"index.html":{}}}],["you've",{"_index":369,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Device.html":{"url":"interfaces/Device.html","title":"interface - Device","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Device\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Device.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        board\n                                \n                                \n                                        dev_type\n                                \n                                \n                                            Optional\n                                        host\n                                \n                                \n                                            Optional\n                                        http\n                                \n                                \n                                            Optional\n                                        inserted\n                                \n                                \n                                            Optional\n                                        lastSeen\n                                \n                                \n                                            Optional\n                                        modified\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                        private_ip\n                                \n                                \n                                            Optional\n                                        public_ip\n                                \n                                \n                                            Optional\n                                        roku\n                                \n                                \n                                        server_id\n                                \n                                \n                                            Optional\n                                        server_version\n                                \n                                \n                                            Optional\n                                        slip\n                                \n                                \n                                            Optional\n                                        ssl\n                                \n                                \n                                        via\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        board\n                                    \n                                \n                                \n                                    \n                                        board:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dev_type\n                                    \n                                \n                                \n                                    \n                                        dev_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        http\n                                    \n                                \n                                \n                                    \n                                        http:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inserted\n                                    \n                                \n                                \n                                    \n                                        inserted:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastSeen\n                                    \n                                \n                                \n                                    \n                                        lastSeen:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modified\n                                    \n                                \n                                \n                                    \n                                        modified:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private_ip\n                                    \n                                \n                                \n                                    \n                                        private_ip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public_ip\n                                    \n                                \n                                \n                                    \n                                        public_ip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roku\n                                    \n                                \n                                \n                                    \n                                        roku:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        server_id\n                                    \n                                \n                                \n                                    \n                                        server_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        server_version\n                                    \n                                \n                                \n                                    \n                                        server_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slip\n                                    \n                                \n                                \n                                    \n                                        slip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ssl\n                                    \n                                \n                                \n                                    \n                                        ssl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        via\n                                    \n                                \n                                \n                                    \n                                        via:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface Device {\n    board: string;\n    private_ip: string;\n    server_id: string;\n    via: string;\n\n    // these are only from http discovery\n    dev_type: string;\n    host?: string;\n    public_ip?: string;\n    slip?: number;  // a port\n    http?: number;  // a port\n    ssl?: number;   // a port or bool\n    inserted?: string; // this is a date\n    modified?: string; // this is a date\n    lastSeen?: string; // this is a date\n    server_version?: string;\n    name?: string;\n    roku?: number; // probably a bool\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Discover.html":{"url":"classes/Discover.html","title":"class - Discover","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Discover\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/discovery.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                discoveryUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                recvPort\n                            \n                            \n                                    Private\n                                    Readonly\n                                sendPort\n                            \n                            \n                                    Private\n                                watcher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                broadcast\n                            \n                            \n                                    Public\n                                    Async\n                                http\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            discoveryUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.tablotv.com/assocserver/getipinfo/'\n                        \n                    \n                        \n                            \n                                    Defined in src/discovery.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            recvPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 8882\n                        \n                    \n                        \n                            \n                                    Defined in src/discovery.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            sendPort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 8881\n                        \n                    \n                        \n                            \n                                    Defined in src/discovery.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            watcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Timeout\n\n                        \n                    \n                        \n                            \n                                    Defined in src/discovery.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            broadcast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    broadcast()\n                \n            \n\n\n            \n                \n                    Defined in src/discovery.ts:21\n                \n            \n\n\n            \n                \n                    Attempt discovery via UDP broadcast. Will only return a single device.\n\n\n                    \n                        Returns :     Promise<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            http\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    http()\n                \n            \n\n\n            \n                \n                    Defined in src/discovery.ts:101\n                \n            \n\n\n            \n                \n                    Attempt discovery via HTTP broadcast using Tablo discovery service\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Timeout = NodeJS.Timeout;\nimport axios from 'axios';\nimport bytes = require('byte-data');\nimport * as Debug from 'debug'\nimport dgram = require('dgram');\n\n\nconst debug  = Debug('discovery');\n\nimport Device from \"./Device\";\n\nexport default class Discover {\n  private readonly sendPort: number = 8881;\n  private readonly recvPort: number = 8882;\n  private readonly discoveryUrl: string = 'https://api.tablotv.com/assocserver/getipinfo/';\n  private watcher: Timeout;\n\n  /**\n   * Attempt discovery via UDP broadcast. Will only return a single device.\n   */\n  public async broadcast(): Promise {\n    const server = dgram.createSocket('udp4');\n\n    server.on('error', (error) => {\n      debug('Bcast Error: ', error);\n      clearTimeout(this.watcher);\n      server.close();\n    });\n\n    server.on('listening', () => {\n      // once the server is listening, broadcast the discovery packet...\n      const client = dgram.createSocket('udp4');\n      client.bind(this.sendPort, () => {\n        client.setBroadcast(true);\n      });\n\n      const data = Buffer.from('BnGr');\n      const to = '255.255.255.255';\n      client.send(data, this.sendPort, to, (error) => {\n        if (error) {\n          debug('Bcast Error: %s', error);\n        } else {\n          debug('Bcast request sent');\n        }\n        client.close();\n      });\n    });\n\n    let outerDevice:Device;\n\n    server.on('message', (msg, info) => {\n      if (msg.length !== 140) {\n        debug(`UNK: Received ${msg.length} of 140 required bytes from ${info.address}:${info.port}`);\n        debug(msg);\n        server.close();\n        return false;\n      }\n      // this is the proper format string let s = struct('>4s64s32s20s10s10s')\n      // s = struct.format('b').unpack()\n\n      const trunc = (txt: string) => txt.split('\\0', 1)[0];\n      const device:Device = {\n        host: trunc(bytes.unpackString(msg, 4, 68)),\n        private_ip: trunc(bytes.unpackString(msg, 68, 100)),\n        // resp_code: trunc(bytes.unpackString(msg, 0, 4)),\n        server_id: trunc(bytes.unpackString(msg, 100, 120)),\n        dev_type: trunc(bytes.unpackString(msg, 120, 130)),\n        board: trunc(bytes.unpackString(msg, 130, 140)),\n        via: 'broadcast'\n      };\n      clearTimeout(this.watcher);\n      server.close();\n      debug('server.on.message received:');\n      debug(device);\n      // I feel like this shouldn't work, but...\n      outerDevice = device;\n      // eslint wanted a return, this works but may be wrong\n      return device;\n    });\n\n    server.bind(this.recvPort);\n\n    this.watcher = setTimeout(() => {\n      server.close();\n    }, 250); // should be 250\n\n    // this is easily grosser and more wronger than it looks\n    return new Promise((resolve) => {\n      server.on('close', () => {\n        debug('broadcast : close');\n        debug('broadcast, data:');\n        debug(outerDevice);\n        resolve([outerDevice]);\n      });\n    });\n  }\n\n  /**\n   * Attempt discovery via HTTP broadcast using Tablo discovery service\n   */\n  public async http(): Promise{\n    return new Promise(async (resolve, reject) => {\n\n      let data: Device[];\n      try {\n        type Response = { data: { cpes: Device[]}};\n        const response:Response = await axios.get(this.discoveryUrl);\n        data = response.data.cpes;\n        data.forEach((part, index, arr) => {\n          if (arr[index]) {\n            arr[index].via = 'http';\n          }\n        }, data); // use arr as this\n      } catch (error) {\n        debug('Http Error:', error);\n        reject( new Error(`Http Error: ${error}`) );\n      }\n      resolve(data);\n    });\n  }\n}\n\nexport const discovery = new Discover();\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Model.html":{"url":"interfaces/Model.html","title":"interface - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ServerInfo.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        device\n                                \n                                \n                                        name\n                                \n                                \n                                        tuners\n                                \n                                \n                                        type\n                                \n                                \n                                        wifi\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        device\n                                    \n                                \n                                \n                                    \n                                        device:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tuners\n                                    \n                                \n                                \n                                    \n                                        tuners:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wifi\n                                    \n                                \n                                \n                                    \n                                        wifi:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface ServerInfo {\n  server_id: string;\n  name: string;\n  timezone: string;\n  version: string;\n  local_address: string;\n  setup_completed: boolean;\n  build_number: number;\n  model: Model;\n  availability: string;\n  cache_key: string;\n  checked: string;\n}\n\nexport interface Model {\n  wifi: boolean;\n  tuners: number;\n  type: string;\n  name: string;\n  device: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServerInfo.html":{"url":"interfaces/ServerInfo.html","title":"interface - ServerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ServerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ServerInfo.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        availability\n                                \n                                \n                                        build_number\n                                \n                                \n                                        cache_key\n                                \n                                \n                                        checked\n                                \n                                \n                                        local_address\n                                \n                                \n                                        model\n                                \n                                \n                                        name\n                                \n                                \n                                        server_id\n                                \n                                \n                                        setup_completed\n                                \n                                \n                                        timezone\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availability\n                                    \n                                \n                                \n                                    \n                                        availability:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        build_number\n                                    \n                                \n                                \n                                    \n                                        build_number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cache_key\n                                    \n                                \n                                \n                                    \n                                        cache_key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        local_address\n                                    \n                                \n                                \n                                    \n                                        local_address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:         Model\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Model\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        server_id\n                                    \n                                \n                                \n                                    \n                                        server_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setup_completed\n                                    \n                                \n                                \n                                    \n                                        setup_completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                    \n                                \n                                \n                                    \n                                        timezone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface ServerInfo {\n  server_id: string;\n  name: string;\n  timezone: string;\n  version: string;\n  local_address: string;\n  setup_completed: boolean;\n  build_number: number;\n  model: Model;\n  availability: string;\n  cache_key: string;\n  checked: string;\n}\n\nexport interface Model {\n  wifi: boolean;\n  tuners: number;\n  type: string;\n  name: string;\n  device: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tablo.html":{"url":"classes/Tablo.html","title":"class - Tablo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tablo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                airingsCache\n                            \n                            \n                                    Private\n                                device\n                            \n                            \n                                    Private\n                                devices\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                batch\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                discover\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getRecordings\n                            \n                            \n                                    Async\n                                getRecordingsCount\n                            \n                            \n                                    Async\n                                getServerInfo\n                            \n                            \n                                    Private\n                                getUrl\n                            \n                            \n                                    Private\n                                isReady\n                            \n                            \n                                    Async\n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            airingsCache\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/index.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Device\n\n                        \n                    \n                        \n                            \n                                    Defined in src/index.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            devices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Device[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/index.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            batch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    batch(data: string[], progressCallback: (arg0: number) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/index.ts:143\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    progressCallback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(path: string)\n                \n            \n\n\n            \n                \n                    Defined in src/index.ts:115\n                \n            \n\n\n            \n                \n                    Deletes a\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            discover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    discover()\n                \n            \n\n\n            \n                \n                    Defined in src/index.ts:20\n                \n            \n\n\n            \n                \n                    Utilizes HTTP discovery with UDP broadcast fallback to find local Tablo devices\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(path: string)\n                \n            \n\n\n            \n                \n                    Defined in src/index.ts:125\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Try to receive data from a specified path\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getRecordings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecordings(force, progressCallback: (num: number) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/index.ts:95\n                \n            \n\n\n            \n                \n                    Retrieves all Recordings from the Tablo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    force\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        whether or not to force reloading from the device or use cached airings\n\n                                    \n                                \n                                \n                                    progressCallback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        function to receive a count of records processed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getRecordingsCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRecordingsCount(force)\n                \n            \n\n\n            \n                \n                    Defined in src/index.ts:74\n                \n            \n\n\n            \n                \n                    Returns a count of the Recordings on the Tablo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    force\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        whether or not to force reloading from the device or use cached airings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getServerInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getServerInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/index.ts:59\n                \n            \n\n\n            \n                \n                    Returns server info reported by the Tablo\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrl(path: string)\n                \n            \n\n\n            \n                \n                    Defined in src/index.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady()\n                \n            \n\n\n            \n                \n                    Defined in src/index.ts:49\n                \n            \n\n\n            \n                \n                    Pre-flight check\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(path: string, strArray?: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/index.ts:177\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'batch'\n                                    \n\n                                \n                                \n                                    strArray\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios from 'axios';\nimport * as Debug from 'debug';\n\nimport { discovery } from './discovery';\nimport Device from \"./Device\";\nimport ServerInfo from \"./ServerInfo\";\n\nconst debug = Debug('index');\n\nconst Axios = axios.create();\n\nexport default class Tablo {\n  private devices: Device[];\n  private airingsCache: [];\n  private device: Device;\n  \n  /**\n   * Utilizes HTTP discovery with UDP broadcast fallback to find local Tablo devices\n   */\n  async discover() {\n\n    let discoverData: Device[];\n    discoverData = await discovery.http();\n\n    debug('discover.http:');\n    debug(discoverData);\n\n    if (Object.keys(discoverData).length === 0) {\n      discoverData = await discovery.broadcast();\n      debug('discover.broadcast:');\n      debug(discoverData);\n    }\n    \n    if (Object.keys(discoverData).length === 0) {\n      return [];\n    }\n\n    // TODO: a nicety when testing, should probably remove\n    this.devices = discoverData;\n    this.device = this.devices[0];\n    \n    return discoverData;\n  }\n\n  /**\n   * Pre-flight check\n   * @throws Error when no device has been selected\n   */\n  private isReady() {\n    if (typeof this.device === 'undefined' || !this.device || !this.device.private_ip) {\n      const msg = 'TabloAPI - No device selected.'\n      throw new Error(msg);\n    }\n  }\n\n  /**\n   * Returns server info reported by the Tablo\n   */\n  async getServerInfo() {\n    this.isReady();\n\n    try {\n      const info: ServerInfo = await this.get('/server/info');\n      return info;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   *  Returns a count of the Recordings on the Tablo\n   * @param force whether or not to force reloading from the device or use cached airings\n   */\n  async getRecordingsCount(force = false) {\n    this.isReady();\n    try {\n      if (!this.airingsCache || force) {\n        this.airingsCache = await this.get('/recordings/airings');\n      }\n      if (!this.airingsCache) {\n        return 0;\n      }\n      return this.airingsCache.length;\n\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**\n   * Retrieves all Recordings from the Tablo\n   * @param force whether or not to force reloading from the device or use cached airings\n   * @param progressCallback function to receive a count of records processed\n   */\n  async getRecordings(force = false, progressCallback: (num: number) => void ) {\n    this.isReady();\n    try {\n      if (!this.airingsCache || force) {\n        this.airingsCache = await this.get('/recordings/airings');\n      }\n      if (!this.airingsCache){\n        return null;\n      }\n      \n      return this.batch(this.airingsCache, progressCallback);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * Deletes a\n   * @param path\n   */\n  async delete(path: string) {\n    this.isReady();\n    const url = this.getUrl(path);\n    return Axios.delete(url);\n  }\n\n  /**\n   * Try to receive data from a specified path\n   * @param path\n   */\n  async get(path: string): Promise {\n    this.isReady();\n    return new Promise( async (resolve, reject) => {\n      try {\n        const url = this.getUrl(path);\n        const response: {data: T } = await Axios.get(url);\n        resolve(response.data);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  private getUrl(path: string) {\n    const newPath = path.replace(/^\\/+/, '');\n    return `http://${this.device.private_ip}:8885/${newPath}`;\n  }\n\n  private async batch(data:string[], progressCallback: (arg0: number) => void):Promise {\n    this.isReady();\n\n    return new Promise( async (resolve, reject) => {\n      let chunk = [];\n      let idx = 0;\n      const size = 50;\n      let recs: T[] = [];\n      while (idx {\n          return returned[el]\n        });\n\n        recs = recs.concat(values);\n      \n        if (typeof progressCallback === 'function') {\n          progressCallback(recs.length);\n        }\n      }\n      resolve(recs);\n    });\n\n  }\n\n  async post(path = 'batch', strArray?:string[] ):Promise {\n    this.isReady();\n    const toPost = strArray ? strArray : null;\n    return new Promise( async (resolve, reject) => {\n      try {\n        const url = this.getUrl(path);\n        const returned:{ data: T[]} = await Axios.post(url, toPost);\n        const { data } = returned;\n        resolve(data);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\nexport { Tablo };\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Device.ts\n            \n            interface\n            Device\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/ServerInfo.ts\n            \n            interface\n            Model\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/ServerInfo.ts\n            \n            interface\n            ServerInfo\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/discovery.ts\n            \n            class\n            Discover\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/discovery.ts\n            \n            variable\n            debug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/discovery.ts\n            \n            variable\n            discovery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            class\n            Tablo\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            variable\n            Axios\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            variable\n            debug\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            axios : ^0.19.2\n        \n            byte-data : ^16.0.3\n        \n            core-js : ^3.3.2\n        \n            debug : ^4.1.1\n        \n            structjs : ^0.2.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ntablo-api\ntablo-api provides a simple API module to interact with Tablo DVRs. \nIt was developed to be used with Node/Electron - it may work in the browser, \nthough ymmv.\nInstallation\nInstall with npm\n  npm install tablo-apior with yarn\n  yarn add tablo-apiUsage\nIn Node:\nconst Tablo = require('tablo-api');\n\nconst Api = new Tablo();\n\nconst devices = Api.discover();\n\nApi.device = { private_ip: \"192.168.1.100\" }\n\nconst serverInfo = Api.getServerInfo();\n\nconst recordings = Api.get('/recordings/airings');\nDevelopment\nAfter you've cloned this repo, there are some built-in commands to aid in development:\nBuild the package -  outputs built files to ./dist/. These are the ones that will ultimately end up in the pacakage.\nnpm run-script buildor\nyarn buildLinter - runs standard lint checks to keep code clean.\nnpm run-script lintor\nyarn lintFormatter - formats the code in place for consistency.\nnpm run-script formator\nyarn formatLicence\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 jessedp\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Axios   (src/.../index.ts)\n                        \n                        \n                            debug   (src/.../discovery.ts)\n                        \n                        \n                            debug   (src/.../index.ts)\n                        \n                        \n                            discovery   (src/.../discovery.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Axios\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : axios.create()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Debug('index')\n                        \n                    \n\n\n            \n        \n\n    src/discovery.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Debug('discovery')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            discovery\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Discover()\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
